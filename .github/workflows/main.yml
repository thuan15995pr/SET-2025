name: Deploy to VM # T√™n c·ªßa workflow, s·∫Ω hi·ªÉn th·ªã tr√™n tab Actions c·ªßa GitHub

on:
  push: # S·ª± ki·ªán k√≠ch ho·∫°t workflow
    branches:
      - main # Ch·ªâ ch·∫°y khi c√≥ push l√™n nh√°nh 'main'. B·∫°n c√≥ th·ªÉ ƒë·ªïi th√†nh nh√°nh kh√°c.

jobs:
  deploy:
    name: Deploy Code to VM
    # Quan tr·ªçng: Ch·ªâ ƒë·ªãnh job n√†y ch·∫°y tr√™n self-hosted runner c·ªßa b·∫°n.
    # Runner c·ªßa b·∫°n c√≥ c√°c label: 'self-hosted', 'Linux', 'ARM64' (nh∆∞ th·∫•y trong h√¨nh c·ªßa b·∫°n)
    # B·∫°n c√≥ th·ªÉ d√πng m·ªôt ho·∫∑c nhi·ªÅu label. 'self-hosted' th∆∞·ªùng l√† ƒë·ªß.
    runs-on: self-hosted # Ho·∫∑c ch·ªâ 'self-hosted'

    steps:
      - name: Print Starting Message
        run: echo "üöÄ Starting deployment process on VM via GitHub Actions..."

      # B∆∞·ªõc 1: Checkout code (t√πy ch·ªçn, nh∆∞ng t·ªët ƒë·ªÉ c√≥ context c·ªßa commit)
      # Action n√†y s·∫Ω checkout code c·ªßa repository v√†o th∆∞ m·ª•c l√†m vi·ªác t·∫°m th·ªùi c·ªßa runner.
      # N√≥ kh√¥ng tr·ª±c ti·∫øp pull v√†o th∆∞ m·ª•c d·ª± √°n c·ªßa b·∫°n ngay.
      - name: Checkout repository
        uses: actions/checkout@v4 # Lu√¥n ki·ªÉm tra phi√™n b·∫£n m·ªõi nh·∫•t c·ªßa action n√†y

      # B∆∞·ªõc 2: Pull code m·ªõi nh·∫•t v√†o th∆∞ m·ª•c d·ª± √°n th·ª±c t·∫ø tr√™n VM
      - name: Pull latest code into project directory
        run: |
          echo "Navigating to project directory and pulling latest code..."
          cd /home/vagrant/another-homework-SET-2025/Basic_API # <--- THAY TH·∫æ B·∫∞NG ƒê∆Ø·ªúNG D·∫™N ƒê√öNG C·ª¶A B·∫†N
          git pull origin main # ƒê·∫£m b·∫£o 'origin main' l√† ƒë√∫ng remote v√† nh√°nh b·∫°n mu·ªën pull
          echo "‚úÖ Code pulled successfully!"

      # B∆∞·ªõc 3: (T√πy ch·ªçn) C√†i ƒë·∫∑t/C·∫≠p nh·∫≠t dependencies
      - name: Install/Update Node.js dependencies
        run: |
          echo "Installing/updating dependencies..."
          cd /home/vagrant/another-homework-SET-2025/Basic_API # <--- THAY TH·∫æ B·∫∞NG ƒê∆Ø·ªúNG D·∫™N ƒê√öNG C·ª¶A B·∫†N
          # ƒê·∫£m b·∫£o m√¥i tr∆∞·ªùng Node.js (v√≠ d·ª• fnm) ƒë∆∞·ª£c thi·∫øt l·∫≠p ƒë√∫ng n·∫øu c·∫ßn
          # V√≠ d·ª• n·∫øu fnm kh√¥ng t·ª± load trong m√¥i tr∆∞·ªùng non-interactive script:
          # export PATH="/home/vagrant/.local/share/fnm:$PATH" # ƒê∆∞·ªùng d·∫´n fnm c·ªßa b·∫°n
          # eval "`fnm env`"
          # fnm use # Ho·∫∑c phi√™n b·∫£n Node c·ª• th·ªÉ
          npm install --production # Ch·ªâ c√†i c√°c dependencies cho production
          echo "‚úÖ Dependencies installed/updated!"

      # B∆∞·ªõc 4: (T√πy ch·ªçn) Kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng Node.js c·ªßa b·∫°n
      - name: Restart Node.js Application
        run: |
          echo "Attempting to restart Node.js application..."
          # ƒê√¢y l√† ph·∫ßn ph·ª©c t·∫°p h∆°n v√† ph·ª• thu·ªôc v√†o c√°ch b·∫°n ƒëang ch·∫°y ·ª©ng d·ª•ng.
          # N·∫øu b·∫°n ch·∫°y tr·ª±c ti·∫øp b·∫±ng 'node Basic_2.mjs', b·∫°n c·∫ßn d·ª´ng ti·∫øn tr√¨nh c≈© v√† b·∫Øt ƒë·∫ßu ti·∫øn tr√¨nh m·ªõi.
          # S·ª¨ D·ª§NG PROCESS MANAGER NH∆Ø PM2 S·∫º GI√öP VI·ªÜC N√ÄY D·ªÑ D√ÄNG H∆†N R·∫§T NHI·ªÄU.

          # V√≠ d·ª• ƒë∆°n gi·∫£n (c√≥ th·ªÉ c·∫ßn c·∫£i thi·ªán v√† ki·ªÉm tra quy·ªÅn):
          # C·ªë g·∫Øng t√¨m v√† d·ª´ng ti·∫øn tr√¨nh Node.js ƒëang ch·∫°y file Basic_2.mjs
          # L∆ØU √ù: 'pkill -f' c√≥ th·ªÉ nguy hi·ªÉm n·∫øu pattern qu√° chung chung.
          echo "Stopping old process if any..."
          pkill -f "node Basic_2.mjs" || echo "No old process found or failed to kill."
          sleep 2 # Ch·ªù m·ªôt ch√∫t ƒë·ªÉ port ƒë∆∞·ª£c gi·∫£i ph√≥ng

          echo "Starting new process..."
          cd /home/vagrant/another-homework-SET-2025/Basic_API # <--- THAY TH·∫æ B·∫∞NG ƒê∆Ø·ªúNG D·∫™N ƒê√öNG C·ª¶A B·∫†N
          # Ch·∫°y l·∫°i ·ª©ng d·ª•ng ·ªü ch·∫ø ƒë·ªô n·ªÅn (background) v√† ghi log
          # ƒê·∫£m b·∫£o user 'vagrant' c√≥ quy·ªÅn ghi v√†o app.log ·ªü th∆∞ m·ª•c ƒë√≥.
          nohup node Basic_2.mjs > app.log 2>&1 &
          echo "‚úÖ Application restart initiated. Check app.log for details."
          # ƒê·ªÉ ki·ªÉm tra: ps aux | grep Basic_2.mjs
